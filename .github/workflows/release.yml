name: Release CI

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:

jobs:
  create-release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - uses: actions/checkout@v4
      - name: Create GitHub release (draft)
        uses: softprops/action-gh-release@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref_name }}
          name: Codex Mate ${{ github.ref_name }}
          draft: true
          prerelease: false

  build-app:
    needs: create-release
    strategy:
      fail-fast: false
      matrix:
        include:
          # macOS arm64 on Apple Silicon runners
          - platform: macos-14
            target: aarch64-apple-darwin
          # macOS x64 on Intel runners
          - platform: macos-13
            target: x86_64-apple-darwin
          # Linux x64
          - platform: ubuntu-22.04
            target: x86_64-unknown-linux-gnu
          # Windows x64
          - platform: windows-latest
            target: x86_64-pc-windows-msvc
    runs-on: ${{ matrix.platform }}
    permissions:
      contents: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup pnpm
        uses: pnpm/action-setup@v3
        with:
          version: latest

      - name: Install Rust (stable) and target
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Rust cache
        uses: swatinem/rust-cache@v2
        with:
          workspaces: |
            src-tauri

      - name: Install dependencies (Ubuntu only)
        if: matrix.platform == 'ubuntu-22.04'
        run: |
          sudo apt-get update
          sudo apt-get install -y libwebkit2gtk-4.1-dev libappindicator3-dev librsvg2-dev patchelf

      - name: Install app dependencies
        run: pnpm install --frozen-lockfile

      - name: Build the app and upload to release
        uses: tauri-apps/tauri-action@v0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          # 提供以下可选签名密钥可进行应用签名（未配置则跳过签名）
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
        with:
          tagName: ${{ github.ref_name }}
          releaseName: Codex Mate ${{ github.ref_name }}
          releaseBody: ""
          releaseDraft: true
          prerelease: false
          args: --target ${{ matrix.target }}
